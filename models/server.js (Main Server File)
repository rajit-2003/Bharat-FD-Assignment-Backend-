// server.js

const express = require('express');
const mongoose = require('mongoose');
const redis = require('redis');
const { translate } = require('@vitalets/google-translate-api'); // Google Translate API for language translation
const cors = require('cors');
const bodyParser = require('body-parser');
const jwt = require('jsonwebtoken');
const bcrypt = require('bcryptjs');
const morgan = require('morgan');
const rateLimit = require('express-rate-limit');
const dotenv = require('dotenv');
const fs = require('fs');
const swaggerUi = require('swagger-ui-express');
const swaggerDocument = require('./swagger.json');

dotenv.config(); // Load environment variables from .env file
const app = express();
const client = redis.createClient(); // Redis client for caching

// Middleware Setup
app.use(cors());
app.use(bodyParser.json());
app.use(morgan('dev')); // Logs HTTP requests

// Rate limiter for security to prevent excessive API calls
const limiter = rateLimit({
  windowMs: 15 * 60 * 1000, // 15 minutes
  max: 100, // limit each IP to 100 requests per window
  message: "Too many requests, please try again later."
});
app.use(limiter);

// MongoDB Connection Setup
mongoose.connect(process.env.DB_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

// Authentication Middleware
const authenticate = (req, res, next) => {
  const token = req.header('Authorization');
  if (!token) return res.status(401).json({ error: 'Access denied' });

  try {
    const verified = jwt.verify(token, process.env.JWT_SECRET);
    req.user = verified;
    next();
  } catch (err) {
    res.status(400).json({ error: 'Invalid token' });
  }
};

// Swagger Documentation
app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));

// Routes
const faqRoutes = require('./routes/faqRoutes');
const authRoutes = require('./routes/authRoutes');

app.use('/api/faqs', authenticate, faqRoutes);
app.use('/api/auth', authRoutes);

// Start Server
app.listen(process.env.PORT || 3000, () => {
  console.log('Server running on port 3000');
});

module.exports = app;

